# -*- coding: utf-8 -*-
"""House Price Prdiction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U1Mz8pCQR3TuaQp822jATbtDWZEoHQqq
"""

import pandas as pd

df=pd.read_csv("HousingData.csv")
df.head()

df.info()

df.describe()

df.fillna(df.mean(numeric_only=True), inplace=True)

print(df.isnull().sum())

import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(8,8))
sns.heatmap(df.corr(),annot=True,fmt=".1g",cmap="Blues")
plt.show()

from sklearn.model_selection import train_test_split
x=df.drop("MEDV",axis=1)
y=df["MEDV"]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

{'colsample_bytree': 0.8,
 'learning_rate': 0.1,
 'max_depth': 4,
 'n_estimators': 200,
 'reg_alpha': 0.1,
 'reg_lambda': 1,
 'subsample': 0.8}

from xgboost import XGBRegressor
xgb=XGBRegressor(
    n_estimators=200,
    max_depth=4,
    learning_rate=0.1,
    subsample=0.8,
    colsample_bytree=0.8,
    reg_alpha=0.1,
    reg_lambda=1
)
xgb.fit(x_train,y_train)

xgb.score(x_train,y_train)*100,xgb.score(x_test,y_test)*100

from sklearn.metrics import root_mean_squared_error,r2_score
y_pred_test=xgb.predict(x_test)
y_pred_train=xgb.predict(x_train)

r2_score(y_train,y_pred_train)*100,r2_score(y_test,y_pred_test)*100

root_mean_squared_error(y_train,y_pred_train),root_mean_squared_error(y_test,y_pred_test)

from xgboost import plot_importance
plot_importance(xgb)
plt.show()

from sklearn.model_selection import GridSearchCV

param_grid = {
    'n_estimators': [100, 200, 300],
    'max_depth': [3, 4, 5],
    'learning_rate': [0.01, 0.1, 0.2],
    'subsample': [0.6, 0.8, 1.0],
    'colsample_bytree': [0.6, 0.8, 1.0],
    'reg_alpha': [0, 0.1, 0.5],
    'reg_lambda': [1, 5, 10]
}


grid_search=GridSearchCV(estimator=xgb,param_grid=param_grid,cv=5,n_jobs=-1)
grid_search.fit(x_train,y_train)

grid_search.best_estimator_

grid_search.best_params_

grid_search.best_score_